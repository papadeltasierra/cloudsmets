/********************************************************************************************************
 * @file    app_cfg.h
 *
 * @brief   This is the header file for app_cfg
 *
 * @author  Zigbee Group
 * @date    2021
 *
 * @par     Copyright (c) 2021, Telink Semiconductor (Shanghai) Co., Ltd. ("TELINK")
 *			All rights reserved.
 *
 *          Portions Copyright (c) 2023, Paul D.Smith (pau@pauldsmith.org.uk)
 *
 *          Licensed under the Apache License, Version 2.0 (the "License");
 *          you may not use this file except in compliance with the License.
 *          You may obtain a copy of the License at
 *
 *              http://www.apache.org/licenses/LICENSE-2.0
 *
 *          Unless required by applicable law or agreed to in writing, software
 *          distributed under the License is distributed on an "AS IS" BASIS,
 *          WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *          See the License for the specific language governing permissions and
 *          limitations under the License.
 *
 *******************************************************************************************************/

#pragma once

/* Enable C linkage for C++ Compilers: */
#if defined(__cplusplus)
extern "C" {
#endif


/**********************************************************************
 * Version configuration
 */
#include "version_cfg.h"

/**********************************************************************
 * Product Information
 */
/* Debug mode config */
#define	UART_PRINTF_MODE				0
#define USB_PRINTF_MODE         		0

/* PM */
#define PM_ENABLE						0

/* PA */
#define PA_ENABLE						0

/* BDB */
#define TOUCHLINK_SUPPORT				0
#define FIND_AND_BIND_SUPPORT			0

/* Board ID */
/* The LilyGo T-ZigBee board is basically am 8258 dongle without the switches. */
#define BOARD_826x_EVK					0
#define BOARD_826x_DONGLE				1
#define BOARD_826x_DONGLE_PA			2
#define BOARD_8258_EVK					3
#define BOARD_8258_EVK_V1P2				4//C1T139A30_V1.2
#define BOARD_8258_DONGLE				5
#define BOARD_8278_EVK					6
#define BOARD_8278_DONGLE				7
#define BOARD_B91_EVK					8
#define BOARD_B91_DONGLE				9

/* Board define */
#if defined(MCU_CORE_826x)
#if !PA_ENABLE
	#define BOARD						BOARD_826x_DONGLE
#else
	#define BOARD						BOARD_826x_DONGLE_PA
#endif
	#define CLOCK_SYS_CLOCK_HZ  		32000000
#elif defined(MCU_CORE_8258)
#if (CHIP_TYPE == TLSR_8258_1M)
	#define FLASH_CAP_SIZE_1M			1
#endif
	#define BOARD						BOARD_8258_DONGLE//BOARD_8258_EVK
	#define CLOCK_SYS_CLOCK_HZ  		48000000
#elif defined(MCU_CORE_8278)
	#define FLASH_CAP_SIZE_1M			1
	#define BOARD						BOARD_8278_DONGLE//BOARD_8278_EVK
	#define CLOCK_SYS_CLOCK_HZ  		48000000
#elif defined(MCU_CORE_B91)
	#define FLASH_CAP_SIZE_1M			1
	#define BOARD						BOARD_B91_DONGLE//BOARD_B91_EVK
	#define CLOCK_SYS_CLOCK_HZ  		48000000
#else
	#error "MCU is undefined!"
#endif

/* Board include */
#if (BOARD == BOARD_826x_EVK)
	#include "board_826x_evk.h"
#elif (BOARD == BOARD_826x_DONGLE)
	#include "board_826x_dongle.h"
#elif (BOARD == BOARD_826x_DONGLE_PA)
	#include "board_826x_dongle_pa.h"
#elif (BOARD == BOARD_8258_DONGLE)
	#include "board_8258_dongle.h"
#elif (BOARD == BOARD_8258_EVK)
	#include "board_8258_evk.h"
#elif (BOARD == BOARD_8258_EVK_V1P2)
	#include "board_8258_evk_v1p2.h"
#elif (BOARD == BOARD_8278_EVK)
	#include "board_8278_evk.h"
#elif (BOARD == BOARD_8278_DONGLE)
	#include "board_8278_dongle.h"
#elif (BOARD == BOARD_B91_EVK)
	#include "board_b91_evk.h"
#elif (BOARD == BOARD_B91_DONGLE)
	#include "board_b91_dongle.h"
#endif


/* Voltage detect module */
/* If VOLTAGE_DETECT_ENABLE is set,
 * 1) if MCU_CORE_826x is defined, the DRV_ADC_VBAT_MODE mode is used by default,
 * and there is no need to configure the detection IO port;
 * 2) if MCU_CORE_8258 or MCU_CORE_8278 is defined, the DRV_ADC_VBAT_MODE mode is used by default,
 * we need to configure the detection IO port, and the IO must be in a floating state.
 * 3) if MCU_CORE_B91 is defined, the DRV_ADC_BASE_MODE mode is used by default,
 * we need to configure the detection IO port, and the IO must be connected to the target under test,
 * such as VCC.
 */
#define VOLTAGE_DETECT_ENABLE						0

#if defined(MCU_CORE_826x)
	#define VOLTAGE_DETECT_ADC_PIN					0
#elif defined(MCU_CORE_8258) || defined(MCU_CORE_8278)
	#define VOLTAGE_DETECT_ADC_PIN					GPIO_PC5
#elif defined(MCU_CORE_B91)
	#define VOLTAGE_DETECT_ADC_PIN					ADC_GPIO_PB0
#endif

/* Watch dog module */
#define MODULE_WATCHDOG_ENABLE						0

/* UART module */
/* CloudSMETS uses the UART to talk to the ESP32-C3 */
#define	MODULE_UART_ENABLE							1

/* The ESP32-C3 drives the tlsr8253 over the zbhci interface over the UART. */
#define ZBHCI_UART									1

#if (ZBHCI_USB_PRINT || ZBHCI_USB_CDC || ZBHCI_USB_HID || ZBHCI_UART)
	#define ZBHCI_EN								1
#endif


/**********************************************************************
 * ZCL cluster support setting
 * CloudSMETS uses the Smart Energy metering support, the Time support and
 * the Basic cluster which we get "for free".
 */
#define ZCL_TIME									1
#define ZCL_METERING_SUPPORT						1

/**********************************************************************
 * Time attributes used by CloudSMETS do not need to be defined.
 */

/**********************************************************************
 * Metering attributes used by CloudSMETS
 */
//Reading Information Set
#define ZCL_ATTRID_CURRENT_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_MAX_DEMAND_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_MAX_DEMAND_RECEIVED_ENABLE 1
#define ZCL_ATTRID_DFT_SUMMATION_ENABLE 1
#define ZCL_ATTRID_DAILY_FREEZE_TIME_ENABLE 1
#define ZCL_ATTRID_METERING_POWER_FACTOR_ENABLE 1
#define ZCL_ATTRID_READING_SNAP_SHORT_TIME_ENABLE 1
#define ZCL_ATTRID_CURRENT_MAX_DEMAND_DELIVERD_TIME_ENABLE 1
#define ZCL_ATTRID_CURRENT_MAX_DEMAND_RECEIVED_TIME_ENABLE 1
#define ZCL_ATTRID_DEFAULT_UPDATE_PERIOD_ENABLE 1
#define ZCL_ATTRID_FAST_POLL_UPDATE_PERIOD_ENABLE 1
#define ZCL_ATTRID_CURRENT_BLOCK_PERIOD_CONSUMPTION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_DAILY_CONSUMPTION_TARGET_ENABLE 1
#define ZCL_ATTRID_CURRENT_BLOCK_ENABLE 1
#define ZCL_ATTRID_PROFILE_INTERVAL_PERIOD_ENABLE 1
#define ZCL_ATTRID_INTERVAL_READ_REPORTING_PERIOD_ENABLE 1
#define ZCL_ATTRID_PRESENT_READING_TIME_ENABLE 1
#define ZCL_ATTRID_VOLUME_PER_REPORT_ENABLE 1
#define ZCL_ATTRID_FLOW_RESTRICTION_ENABLE 1
#define ZCL_ATTRID_SUPPLY_STATUS_ENABLE 1
#define ZCL_ATTRID_CURRENT_INLET_ENERGY_CARRIER_SUMMATION_ENABLE 1
#define ZCL_ATTRID_CURRENT_OUTLET_ENERGY_CARRIER_SUMMATION_ENABLE 1
#define ZCL_ATTRID_INLET_TEMPERATURE_ENABLE 1
#define ZCL_ATTRID_OUTLET_TEMPERATURE_ENABLE 1
#define ZCL_ATTRID_CONTROL_TEMPERATURE_ENABLE 1
#define ZCL_ATTRID_CURRENT_INLET_ENERGY_CARRIER_DEMAND_ENABLE 1
#define ZCL_ATTRID_CURRENT_OUTLET_ENERGY_CARRIER_DEMAND_ENABLE 1
#define ZCL_ATTRID_PREVIOUS_BLOCK_PERIOD_CONSUMPTION_DELIVERD_ENABLE 1

//Summation TOU Information Set
#define ZCL_ATTRID_CURRENT_TIER_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_1_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_2_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_2_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_3_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_3_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_4_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_4_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_5_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_5_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_6_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_6_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_7_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_7_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_8_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_8_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_9_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_9_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_10_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_10_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_11_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_11_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_12_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_12_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_13_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_13_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_14_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_14_SUMMATION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_15_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_15_SUMMATION_RECEIVED_ENABLE 1

//Meter Status Attribute Set
#define ZCL_ATTRID_STATUS_ENABLE 1
#define ZCL_ATTRID_REMAINING_BATTERY_LIFE_ENABLE 1
#define ZCL_ATTRID_HOURS_IN_OPERATION_ENABLE 1
#define ZCL_ATTRID_HOURS_IN_FAULT_ENABLE 1

//Formatting
#define ZCL_ATTRID_UNIT_OF_MEASURE_ENABLE 1
#define ZCL_ATTRID_MULTIPLIER_ENABLE 1
#define ZCL_ATTRID_DIVISOR_ENABLE 1
#define ZCL_ATTRID_SUMMATION_FORMATTING_ENABLE 1
#define ZCL_ATTRID_DEMAND_FORMATTING_ENABLE 1
#define ZCL_ATTRID_HISTORICAL_CONSUMPTION_FORMATTING_ENABLE 1
#define ZCL_ATTRID_METERING_DEVICE_TYPE_ENABLE 1
#define ZCL_ATTRID_SITE_ID_ENABLE 1
#define ZCL_ATTRID_METER_SERIAL_NUMBER_ENABLE 1
#define ZCL_ATTRID_ENERGY_CARRIER_UNIT_OF_MEASURE_ENABLE 1
#define ZCL_ATTRID_ENERGY_CARRIER_SUMMATION_FORMATTING_ENABLE 1
#define ZCL_ATTRID_ENERGY_CARRIER_DEMAND_FORMATTING_ENABLE 1
#define ZCL_ATTRID_TEMPERATURE_UNIT_OF_MEASURE_ENABLE 1
#define ZCL_ATTRID_TEMPERATURE_FORMATTING_ENABLE 1

//Historical Consumption Attribute
#define ZCL_ATTRID_INSTANTANEOUS_DEMAND_ENABLE 1
#define ZCL_ATTRID_CURRENT_DAY_CONSUMPTION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_DAY_CONSUMPTION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_PREVIOUS_DAY_CONSUMPTION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_PREVIOUS_DAY_CONSUMPTION_RECEIVED_ENABLE 1
#define ZCL_ATTRID_CUR_PARTITAL_PROFILE_INT_START_TIME_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CUR_PARTITAL_PROFILE_INT_START_TIME_REVEIVED_ENABLE 1
#define ZCL_ATTRID_CUR_PARTITAL_PROFILE_INT_VALUE_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CUR_PARTITAL_PROFILE_INT_VALUE_REVEIVED_ENABLE 1
#define ZCL_ATTRID_CURRENT_DAY_MAX_PRESSURE_ENABLE 1
#define ZCL_ATTRID_CURRENT_DAY_MIN_PRESSURE_ENABLE 1
#define ZCL_ATTRID_PREVIOUS_DAY_MAX_PRESSURE_ENABLE 1
#define ZCL_ATTRID_PREVIOUS_DAY_MIN_PRESSURE_ENABLE 1
#define ZCL_ATTRID_CURRENT_DAY_MAX_DEMAND_ENABLE 1
#define ZCL_ATTRID_PREVIOUS_DAY_MAX_DEMAND_ENABLE 1
#define ZCL_ATTRID_CURRENT_MONTH_MAX_DEMAND_ENABLE 1
#define ZCL_ATTRID_CURRENT_YEAR_MAX_DEMAND_ENABLE 1
#define ZCL_ATTRID_CURRENT_DAY_MAX_ENERGY_CARRIER_DEMAND_ENABLE 1
#define ZCL_ATTRID_PREVIOUS_DAY_MAX_ENERGY_CARRIER_DEMAND_ENABLE 1
#define ZCL_ATTRID_CURRENT_MONTH_MAX_ENERGY_CARRIER_DEMAND_ENABLE 1
#define ZCL_ATTRID_CURRENT_MONTH_MIN_ENERGY_CARRIER_DEMAND_ENABLE 1
#define ZCL_ATTRID_CURRENT_YEAR_MAX_ENERGY_CARRIER_DEMAND_ENABLE 1
#define ZCL_ATTRID_CURRENT_YEAR_MIN_ENERGY_CARRIER_DEMAND_ENABLE 1

//Load Profile Configuration
#define ZCL_ATTRID_MAX_NUMBER_OF_PERIODS_DELIVERD_ENABLE 1

//Supply Limit Attributes
#define ZCL_ATTRID_CURRENT_DEMAND_DELIVERD_ENABLE 1
#define ZCL_ATTRID_DEMAND_LIMIT_ENABLE 1
#define ZCL_ATTRID_DEMAND_INTEGRATION_PERIOD_ENABLE 1
#define ZCL_ATTRID_NUMBER_OF_DEMAND_SUB_INTERVALS_ENABLE 1

//Block Information Set
#define ZCL_ATTRID_CURRENT_NO_TIER_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_1_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_2_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_3_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_4_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_5_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_6_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_7_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_8_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_9_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_10_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_11_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_12_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_13_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_14_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1
#define ZCL_ATTRID_CURRENT_TIER_15_BLOCK_1_SUMMATION_DELIVERD_ENABLE 1

//Alarms Set
#define ZCL_ATTRID_GENERIC_ALARM_MASK_ENABLE 1
#define ZCL_ATTRID_ELECTRICITY_ALARM_MASK_ENABLE 1
#define ZCL_ATTRID_GENERIC_FLOW_PRESSURE_ALARM_MASK_ENABLE 1
#define ZCL_ATTRID_WATER_SPEC_ALARM_MASK_ENABLE 1
#define ZCL_ATTRID_HEAT_AND_COOLING_SPEC_ALARM_MASK_ENABLE 1
#define ZCL_ATTRID_GAS_SPEC_ALARM_MASK_ENABLE 1


/**********************************************************************
 * Stack configuration
 */
#include "stack_cfg.h"


/**********************************************************************
 * EV configuration
 */
typedef enum{
	EV_POLL_ED_DETECT,
	EV_POLL_HCI,
    EV_POLL_IDLE,
	EV_POLL_MAX,
}ev_poll_e;

/* Disable C linkage for C++ Compilers: */
#if defined(__cplusplus)
}
#endif
